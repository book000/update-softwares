name: CI for Linux

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install dependencies
        run: |
          sudo apt-get update
          # Install packages with fallback to available versions
          while IFS= read -r package || [[ -n "$package" ]]; do
            if [[ ! "$package" =~ ^[[:space:]]*$ ]] && [[ ! "$package" =~ ^# ]]; then
              echo "Installing $package"
              sudo apt-get install -y "$package" || {
                package_name=${package%=*}
                echo "Version specific install failed, trying $package_name without version"
                sudo apt-get install -y "$package_name"
              }
            fi
          done < .devcontainer/apt-packages.txt
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python3 --version
          python3 -m unittest discover -s src/linux -p "test_*.py"
          python3 -m unittest src.test_github_issue_atomic
          python3 -m unittest src.test_common

  check-finished:
    name: Check finished CI for Linux
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test
    permissions:
      actions: read

    steps:
      - name: Check build failure
        run: |
          echo "Build status: ${{ needs.test.result }}"
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Build failed"
            exit 1
          fi
